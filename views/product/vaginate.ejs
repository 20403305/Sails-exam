<div id="app">
    <!-- the table element-->

    <div class="columns">
        <div class="column is-half">
            <section class="section">

                <div class="card" v-for="product in products">
                    <header class="card-header">
                        <p class="card-header-title">
                            {{product.product}}
                        </p>
                    </header>
                    <div class="card-content">
                        <!-- <div class="content">
                            {{product.sale}}
                        </div> -->
                        <div class="content" v-if="product.sale">
                            On sale
                        </div>
                        <div class="content" v-if="!product.sale">
                            Normal price
                        </div>
                    </div>
                </div>

            </section>
        </div>


        <div class="column">
            <section class="section">
                <!-- 创建属性7 -->
                <div class="field">
                    <label class="label">Product name</label>
                    <div class="control">
                        <input class="input" type="string" name="productname" id="productname">
                    </div>
                </div>
                <input type="checkbox" id="onsale" name="onsale" value="onsale">
                <label for="onsale">Only showing "On Sale" products</label><br>
                <div class="field">
                    <div class="control">
                        <b-button type="is-warning" @click="fetchPage(limit, 0)">Search</b-button>
                    </div>
                </div>
            </section>
        </div>
    </div>


    <!-- the nav element-->
    <nav class="pagination" role="navigation">
        <button class="pagination-previous" v-bind:disabled="isFirstPage"
            v-on:click="fetchPage(limit, offset - limit)">Previous</button>
        <button class="pagination-next" :disabled="isLastPage" v-on:click="fetchPage(limit, offset + limit)">Next
            page</button>
        <ul class="pagination-list">
            <li>
                <a class="pagination-link" @click="fetchPage(limit, 0)">1</a>
            </li>
            <li>
                <span class="pagination-ellipsis">&hellip;</span>
            </li>
            <li>
                <a class="pagination-link" v-if="!isFirstPage"
                    @click="fetchPage(limit, offset - limit)">{{currentPageNumber - 1}}</a>
            </li>
            <li>
                <a class="pagination-link is-current" @click="fetchPage(limit, offset)">{{currentPageNumber}}</a>
            </li>
            <li>
                <a class="pagination-link" v-if="!isLastPage"
                    v-on:click="fetchPage(limit, offset + limit)">{{currentPageNumber + 1}}</a>
            </li>
            <li>
                <span class="pagination-ellipsis">&hellip;</span>
            </li>
            <li>
                <a class="pagination-link"
                    @click="fetchPage(limit, (Math.ceil(numOfRecords / limit) - 1) * limit)">{{Math.ceil(numOfRecords /
                    limit)}}</a>
            </li>
        </ul>
    </nav>
    <!-- <div class="columns">
        <b-input class="column" v-model="limit"></b-input>
        <div class="column">
            <button class="button is-warning" @click="fetchPage(limit, 0)">GO!</button>
        </div>
    </div> -->
</div>



<script src="https://unpkg.com/vue"></script>
<!-- Full bundle -->
<script src="https://unpkg.com/buefy/dist/buefy.min.js"></script>

<!-- Individual components -->
<script src="https://unpkg.com/buefy/dist/components/table"></script>
<script src="https://unpkg.com/buefy/dist/components/input"></script>

<script>
    new Vue({
        el: '#app',
        data: {
            // numOfRecords: parseInt("<%= numOfRecords %>"),
            numOfRecords: 0,
            products: [],
            currentPageNumber: 1,
            limit: 2,
            offset: 0,
        },

        computed: {
            isFirstPage: function () { return (this.offset < this.limit) },
            isLastPage: function () { return (this.offset + this.limit >= this.numOfRecords) },
        },
        methods: {
            fetchPage: async function (limit, offset) {
                var product_url = "product=" + document.getElementById("productname").value;
                var onsale_url = "&sale=" + document.getElementById("onsale").checked;


                var response = await fetch("/product?"+product_url+onsale_url+"&limit=" + limit + "&offset=" + offset);
                // console.log(response)
                if (response.ok) {
                    var products = await response.json();
                    this.products = products.thoseProducts;
                    this.numOfRecords = products.count;
                    this.currentPageNumber = Math.floor(offset / limit) + 1;
                    // `this` inside methods points to the Vue instance

                    this.limit = Math.max(parseInt(limit), 2) || 2;
                    this.offset = offset;

                } else {
                    alert(response.statusText);
                }
            },
        },

        mounted: function () {
            this.fetchPage(this.limit, this.offset);
        },
    })
</script>